name: build

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string

jobs:
  ci-build:
    name: Lygisk Build ${{ inputs.branch }}
    runs-on: ubuntu-latest
    env:
      NDK_CCACHE: ${{ github.workspace }}/ccache
      CCACHE_DIR: ${{ github.workspace }}/.ccache

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ci-build-${{ inputs.branch }}
          submodules: 'recursive'
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Set up ccache
        run: |
          sudo apt-get install -y ccache
          ln -s $(which ccache) ./ccache
          mkdir ./.ccache
          ccache -o compiler_check='%compiler% -dumpmachine; %compiler% -dumpversion'

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache build cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/.ccache
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-build-cache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-cache-

      - name: Set up NDK
        run: python build.py -v ndk

      - name: Set version
        if: inputs.branch == 'stable' || inputs.branch == 'beta'
        run: |
          VERSION_CODE=$(cat gradle.properties | grep 'magisk.versionCode' | cut -f2 -d '=')
          echo version=v$(echo $VERSION_CODE | cut -c1-2).$(echo $VERSION_CODE | cut -c1-2 --complement) > config.prop

      - name: Build release
        run: |
          ccache -zp
          python build.py -vr all
      - name: Build debug
        run: |
          python build.py -v all
          ccache -s
      - name: Stop gradle daemon
        run: ./gradlew --stop

      # Only upload artifacts built on Linux
      - name: Upload build artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.branch }}
          path: out